install.packages("shiny")
library(shiny)
runEcample("01_hello")
runExample("01_hello")
hist(
x,
breaks = buckets,
col = "#505050", border = "black",
xlab = "Waiting time to next event (minutes),
main = "Histogram of waiting times")
hist(
x,
breaks = buckets,
col = "#505050", border = "black",
xlab = "Waiting time to next event (minutes)",
main = "Histogram of waiting times")
ui <- fluidPage(
titlePanel("Hello Shiny!"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "buckets",
label = "number of buckets",
min = 0,
max = 100,
value = 50
),
mainPanel(
plotOutput(
outputId = "distPlot"
)
)
)
)
)
ui <- fluidPage(
titlePanel("Hello Shiny!"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "buckets",
label = "number of buckets",
min = 0,
max = 100,
value = 50
)
),
mainPanel(
plotOutput(
outputId = "distPlot"
)
)
)
)
ui <- fluidPage(
titlePanel("Hello Shiny!"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "buckets",
label = "Number of buckets",
min = 0,
max = 100,
value = 50
)
),
mainPanel(
plotOutput(
outputId = "distPlot"
)
)
)
)
bins <- seq(
min(x),
max(x),
length.out = input$buckets + 1
)
runApp("App-1", display.mode = "showcase")
runApp("App-1", display.mode = "showcase")
runExample("02_text")
runExample("03_reactivity")
runExample("04_mpg")
runExample("05_sliders")
runExample("06_tabsets")
unExample("07_widgets")
runExample("07_widgets")
runExample("08_html")
runExample("09_upload")     # file upload wizard
runExample("10_download")   # file download wizard
runExample("11_timer")      # an automated timer
library(shiny)
h1("My title")
?selectInput
?selectInput
?sliderInput
ui <-fluidpPage(
titlePanel("This is my title"),
fluidRow(
h1("censusVis"),
sidebarPanel(
p("Create demographic maps with information from the 2010 US Census"),
inputPanel(
selectInput(
"dropdown",
label = "Choose a variable to display",
choices = c("Percent White", "Percent Black", "Percent Italian", "Percent Asian"),
selected = "Percent Italian",
multiple = false,
selectize = true,
width = "100%",
size = "100px"
),
sliderInput(
"slider",
"sliderId",
min = 0,
max = 100,
stemp = 1,
)
)
)
)
)
ui <-fluidPage(
titlePanel("This is my title"),
fluidRow(
h1("censusVis"),
sidebarPanel(
p("Create demographic maps with information from the 2010 US Census"),
inputPanel(
selectInput(
"dropdown",
label = "Choose a variable to display",
choices = c("Percent White", "Percent Black", "Percent Italian", "Percent Asian"),
selected = "Percent Italian",
multiple = false,
selectize = true,
width = "100%",
size = "100px"
),
sliderInput(
"slider",
"sliderId",
min = 0,
max = 100,
stemp = 1,
)
)
)
)
)
ui <-fluidPage(
titlePanel("This is my title"),
fluidRow(
h1("censusVis"),
sidebarPanel(
p("Create demographic maps with information from the 2010 US Census"),
inputPanel(
selectInput(
"dropdown",
label = "Choose a variable to display",
choices = c("Percent White", "Percent Black", "Percent Italian", "Percent Asian"),
selected = "Percent Italian",
multiple = false,
selectize = true
),
sliderInput(
"slider",
"sliderId",
min = 0,
max = 100,
step = 1,
)
)
)
)
)
shinyApp(ui, server = server);
shinyApp(ui = ui, server = server);
counties <- readRDS("C:/dev/Rshiny/App-4/counties.rds")
View(counties)
library(mapproj)
install.packages("maps")
install.packages("maps")
install.packages("mapproj")
install.packages(c("maps", "mapproj"))
runApp("stockVis")
install.packages("quantmod")
install.packages("quantmod")
runApp("stockVis")
runApp("app")
install.packages('rsconnect')
runGitHub( "<your repository name>", "<your user name>")
runGitHub( "<your repository name>", "<your user name>")
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
```{r}
install.packages(tidyverse)
